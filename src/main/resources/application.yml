server:
  port: 8081
spring:
  web:
    resources:
      add-mappings: false
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 20MB
  mvc:
    throw-exception-if-no-handler-found: true
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  datasource:
    url: "jdbc:mysql://localhost:3306/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC"
    username: root
    password: 1234
    hikari:
      max-lifetime: 900000
  jackson:
    deserialization:
      fail-on-unknown-properties: true
      fail-on-ignored-properties: true
#    property-naming-strategy: SNAKE_CASE
  jpa:
    open-in-view: true
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: false
  flyway:
    locations: "classpath:db/migration,classpath:db/testdata"

  mail:
    host: email-smtp.us-east-1.amazonaws.com
    port: 587
    username: ${SMTP_EMAIL_USUARIO}
    password: ${SMTP_EMAIL_SENHA}
  freemarker:
    template-loader-path: classpath:templates
    content-type: text/html
    charset: UTF-8
    settings:
      locale: pt_BR

  security:
    oauth2:
      resourceserver:
        opaquetoken:
          introspection-uri: "http://auth.algafood.local:8082/oauth/check_token"
          client-id: checktoken
          client-secret: check123

algafood:
  email:
    impl: fake
    remetente: AlgaFood <marcosf_alves@outlook.com>
    sandbox:
      destinatario: marquinhofalves@gmail.com

  storage:
    tipo: s3
    local:
      diretorio-fotos: "/home/malves/catalogo"
    s3:
      id-chave-acesso: ${ID_CHAVE_ACESSO}
      chave-acesso-secreta: ${CHAVE_ACESSO_SECRETA}
      bucket: mfa-algafood-api
      regiao: us-east-1
      diretorio-fotos: catalogo

  logging:
    loggly:
      token: ${CUSTOMER_TOKEN_LOGGLY}
      apptag: algafood-api

#Separar no profile de prod.
#logging:
#  level:
#    org:
#      hibernate: error
#      springframework:
#        web: debug
#        servlet:
#          view:
#            freemarker: warn

#logging:
#  level:
#    org:
#      hibernate:
#        type:
#          descriptor:
#            sql:
#              BasicBinder: TRACE

#logging:
#  level:
#    org:
#      hibernate:
#        type: trace
